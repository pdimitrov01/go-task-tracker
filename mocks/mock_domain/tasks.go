// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/tasks.go

// Package mock is a generated GoMock package.
package mock

import (
	domain "api/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockTasksRepo is a mock of TasksRepo interface.
type MockTasksRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTasksRepoMockRecorder
}

// MockTasksRepoMockRecorder is the mock recorder for MockTasksRepo.
type MockTasksRepoMockRecorder struct {
	mock *MockTasksRepo
}

// NewMockTasksRepo creates a new mock instance.
func NewMockTasksRepo(ctrl *gomock.Controller) *MockTasksRepo {
	mock := &MockTasksRepo{ctrl: ctrl}
	mock.recorder = &MockTasksRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTasksRepo) EXPECT() *MockTasksRepoMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockTasksRepo) CreateTask(ctx context.Context, data domain.Task) (domain.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", ctx, data)
	ret0, _ := ret[0].(domain.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockTasksRepoMockRecorder) CreateTask(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockTasksRepo)(nil).CreateTask), ctx, data)
}

// GetTaskById mocks base method.
func (m *MockTasksRepo) GetTaskById(ctx context.Context, id uuid.UUID) (domain.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskById", ctx, id)
	ret0, _ := ret[0].(domain.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskById indicates an expected call of GetTaskById.
func (mr *MockTasksRepoMockRecorder) GetTaskById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskById", reflect.TypeOf((*MockTasksRepo)(nil).GetTaskById), ctx, id)
}

// GetTasks mocks base method.
func (m *MockTasksRepo) GetTasks(ctx context.Context) ([]domain.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTasks", ctx)
	ret0, _ := ret[0].([]domain.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTasks indicates an expected call of GetTasks.
func (mr *MockTasksRepoMockRecorder) GetTasks(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTasks", reflect.TypeOf((*MockTasksRepo)(nil).GetTasks), ctx)
}
